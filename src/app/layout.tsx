import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
 
import LayoutWrapper from "./component/layout/LayoutWrapper";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// export const metadata: Metadata = {
//   title: "Accilent finance limited",
//   description: "Generated by create next app",
// };

export const metadata: Metadata = {
  title: "Accilent finance limited | Secure Crypto Investment Platform",
  description:
    "Accilent finance limited empowers you to grow your wealth through secure, transparent, and high-yield crypto investments. Join our trusted platform and take charge of your financial future.",
  keywords: [
    "Accilent finance limited",
    "Crypto Investment",
    "Secure Crypto Platform",
    "Passive Income",
    "Blockchain Finance",
    "Invest in Crypto",
    "Web3 Investment",
    "High-Yield Crypto"
  ],
  authors: [{ name: "Accilent Team", url: "https://accilent.it.com/" }],
  openGraph: {
    title: "Accilent finance limited | Secure Crypto Investment Platform",
    description:
      "Grow your wealth through our trusted and transparent crypto investment platform. Start investing with confidence.",
    url: "https://accilent.it.com/",
    siteName: "Accilent finance limited",
    images: [
      {
        url: "https://accilent.it.com/opengraph-image.jpg",
        width: 1200,
        height: 630,
        alt: "Accilent finance limited crypto investment platform",
      },
    ],
    locale: "en_US",
    type: "website",
  },
  twitter: {
    card: "summary_large_image",
    title: "Accilent finance limited | Secure Crypto Investment Platform",
    description:
      "Join Accilent finance limited and take charge of your financial future with high-yield crypto investments.",
    images: ["https://accilent.it.com/opengraph-image.jpg"],
    creator: "@blockfortune",
  },
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <LayoutWrapper>{children}</LayoutWrapper>

      </body>
    </html>
  );
}
